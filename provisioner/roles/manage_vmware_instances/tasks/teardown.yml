---

# ----------------------- Destroy Tower Instances -----------------------
- name: Destory Tower Instances
  vmware_guest:
    hostname: "{{ vCenterServer }}"
    username: "{{ vCenterUsername }}"
    password: "{{ vCenterPassword }}"
    datacenter: "{{ vCenterDatacenter }}"
    cluster: "{{ vCenterCluster }}"
    folder: "{{ vCenterFolder }}"
    name: "{{ ec2_name_prefix }}-s{{ item }}-tower"
    validate_certs: false
    state: absent
    force: yes
  with_sequence: count={{ student_total }}
  register: tower_jobs
  async: 7200
  poll: 0

# ----------------------- Destroy Gitlab Instances -----------------------
- name: Destory Gitlab Instances
  vmware_guest:
    hostname: "{{ vCenterServer }}"
    username: "{{ vCenterUsername }}"
    password: "{{ vCenterPassword }}"
    datacenter: "{{ vCenterDatacenter }}"
    cluster: "{{ vCenterCluster }}"
    folder: "{{ vCenterFolder }}"
    name: "{{ ec2_name_prefix }}-gitlab"
    validate_certs: false
    state: absent
    force: yes
  register: gitlab_jobs
  async: 7200
  poll: 0

# ----------------------- Destroy Docs Instances -----------------------
- name: Destory Docs Instances
  vmware_guest:
    hostname: "{{ vCenterServer }}"
    username: "{{ vCenterUsername }}"
    password: "{{ vCenterPassword }}"
    datacenter: "{{ vCenterDatacenter }}"
    cluster: "{{ vCenterCluster }}"
    folder: "{{ vCenterFolder }}"
    name: "{{ ec2_name_prefix }}-docs"
    validate_certs: false
    state: absent
    force: yes
  register: docs_jobs
  async: 7200
  poll: 0

# ----------------------- Destroy Windows Instances -----------------------
- name: Destory Windows Instances
  vmware_guest:
    hostname: "{{ vCenterServer }}"
    username: "{{ vCenterUsername }}"
    password: "{{ vCenterPassword }}"
    datacenter: "{{ vCenterDatacenter }}"
    cluster: "{{ vCenterCluster }}"
    folder: "{{ vCenterFolder }}"
    name: "{{ ec2_name_prefix }}-s{{ item }}-win1"
    validate_certs: false
    state: absent
    force: yes
  with_sequence: count={{ student_total }}
  register: windows1_jobs
  async: 7200
  poll: 0


###################  Wait for jobs to complete ###################

#- name: Wait for DC instance creation to complete
#  async_status: jid="{{ item.ansible_job_id }}"
#  register: dc_instances
#  until: dc_instances.finished
#  retries: 300
#  with_items: "{{ dc_jobs.results }}"
#
#- name: Wait for Gitlab instance creation to complete
#  async_status: jid="{{ item.ansible_job_id }}"
#  register: gitlab_instances
#  until: gitlab_instances.finished
#  retries: 300
#  with_items: "{{ gitlab_jobs.results }}"
#
#- name: Wait for Docs instance creation to complete
#  async_status: jid="{{ item.ansible_job_id }}"
#  register: docs_instances
#  until: docs_instances.finished
#  retries: 300
#  with_items: "{{ docs_jobs.results }}"
#
#- name: Wait for tower instance creation to complete
#  async_status: jid="{{ item.ansible_job_id }}"
#  register: tower_instances
#  until: tower_instances.finished
#  retries: 300
#  with_items: "{{ tower_jobs.results }}"
#
#- name: Wait for windows instance creation to complete
#  async_status: jid="{{ item.ansible_job_id }}"
#  register: windows_instances
#  until: windows_instances.finished
#  retries: 300
#  with_items:
#    - "{{ windows1_jobs.results }}"
#
#- name: Wait for Workstation instance creation to complete
#  async_status: jid="{{ item.ansible_job_id }}"
#  register: workstation_instances
#  until: workstation_instances.finished
#  retries: 300
#  with_items:
#    - "{{ workstation_jobs.results }}"